/*

 SimpleClass
 Copyright(c) 2011 Johnathan Leppert
 Build: 0.1 24 2011-10-02 22:10:54 johnathan 
 MIT License
 Inspired by John Resig's Simple Inheritance and Prototype
*/
(function(f,l){var k=!1,m=/xyz/.test(function(){})?/\b_super\b/:/.*/,n=f.SimpleClass,g=function(){};f.SimpleClass=g;g._version={build:21,version:0.1};g._noConflict=function(){try{delete f.SimpleClass}catch(c){}f.SimpleClass=n;return g};g._extend=function(c){function j(h,a,e,d){e=e?e:h;if(h._superClass&&h._superClass[a]){j(h._superClass,a,e,!0);var c=h._superClass[a],b;for(b in c)if(h[a][b]===l)if(d)if(e[b]instanceof Array)e[b].push(c[b]);else if(e[b]instanceof Object&&c[b]instanceof Object){var f=
e[b],g=c[b],i=void 0;for(i in g)f[i]=g[i]}else e[b]=c[b];else e[b]=c[b];else e[b]=h[a][b]}if(h[a])for(b in h[a])if(d)if(e[b]instanceof Array)e[b].push(h[a][b]);else if(e[b]instanceof Object&&h[a][b]instanceof Object)for(g in c=e[b],f=h[a][b],g=void 0,f)c[g]=f[g];else e[b]=h[a][b];else e[b]=h[a][b]}function a(){k||(this._init&&this._init.apply(this,arguments),j(a.prototype,"_instance",this))}var c=c||{},g=this.prototype;k=!0;var i=new this;k=!1;for(var d in c)i[d]=typeof c[d]=="function"&&typeof g[d]==
"function"&&m.test(c[d])?function(c,d){return function(){var e=this._super,f=this._class;this._super=g[c];this._class=a.prototype;var i=d.apply(this,arguments);this._super=e;this._class=f;return i}}(d,c[d]):function(d,f){return typeof c[d]=="function"?function(){var c=this._class;this._class=a.prototype;var d=f.apply(this,arguments);this._class=c;return d}:c[d]}(d,c[d]);a.prototype=i;if(c._mix)for(i=0;i<c._mix.length;i++){d=c._mix[i];for(var f in d)a.prototype[f]===l&&(a.prototype[f]=d[f]);d.prototype&&
(j(d.prototype,"_mix",a.prototype._mix,!0),j(d.prototype,"_instance",a.prototype._instance,!0),j(d.prototype,"_static",a.prototype._static,!0))}a.prototype.constructor=a;a.prototype._superClass=this.prototype;j(a.prototype,"_static",a,!0);a._extend=arguments.callee;return a}})(window);
