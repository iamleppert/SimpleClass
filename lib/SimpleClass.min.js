/*

 SimpleClass
 Copyright(c) 2011 Johnathan Leppert
 Build: 0.1 6 2011-09-28 22:09:27 johnathan 
 MIT License
 Inspired by John Resig's Simple Inheritance and Prototype
*/
(function(d,i){var h=!1,j=/xyz/.test(function(){})?/\b_super\b/:/.*/,k=d.SimpleClass,e=function(){};d.SimpleClass=e;e._version={build:6,version:0.1};e._noConflict=function(){try{delete d.SimpleClass}catch(a){}d.SimpleClass=k;return e};e._extend=function(a){function e(a,b,c){c=c?c:a;if(a._superClass&&a._superClass[b]){var d=e(a._superClass,b),d=d?d:a._superClass[b],f;for(f in d)c[f]=a[b][f]===i?d[f]:a[b][f]}if(a[b])for(f in a[b])c[f]=a[b][f]}function b(){h||(this.init&&this.init.apply(this,arguments),
e(b.prototype,"_instance",this))}var a=a||{},d=this.prototype;h=!0;var g=new this;h=!1;for(var c in a)g[c]=typeof a[c]=="function"&&typeof d[c]=="function"&&j.test(a[c])?function(a,b){return function(){var c=this._super;this._super=d[a];var e=b.apply(this,arguments);this._super=c;return e}}(c,a[c]):a[c];b.prototype=g;if(a._mix)for(g=0;g<a._mix.length;g++)for(c in a._mix[g].prototype)b.prototype[c]=a._mix[g].prototype[c];b.prototype.constructor=b;b.prototype._superClass=this.prototype;e(b.prototype,
"_static",b);b._extend=arguments.callee;return b}})(window);
